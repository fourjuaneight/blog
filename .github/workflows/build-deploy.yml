name: Build and Deploy

on: [push]

jobs:
  build:
    name: Build Site and Generate Social Images
    runs-on: ubuntu-20.04
    env:
      HUGO_VERSION: 0.111.3
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Use Node 16.15.1
        uses: actions/setup-node@v2
        with:
          node-version: 16.15.1

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Use Go 1.20.3
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.20.3'

      - name: Install Hugo
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded

      - name: Build Site
        run: npm run build

      - name: Install Go Rod Dependencies
        run: sudo apt-get install -y libgbm-dev

      - name: Run Social Images Script
        run: npm run post

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'chore: Add new og social image.'

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      deployments: write
    needs: build
    steps:
      - name: Publish
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{secrets.CLOUDFLARE_API_TOKEN}}
          accountId: ${{secrets.ACCOUNT_ID}}
          projectName: ${{secrets.PROJECT_NAME}}
          directory: ${{secrets.DIRECTORY}}
          gitHubToken: ${{secrets.GITHUB_TOKEN}}
